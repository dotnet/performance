#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"languageName":"csharp","name":"csharp"}]}}

#!csharp

// ML and MA are convenience syntax for making lists and arrays.
public static List<T> ML<T>(params T[] elems) => new List<T>(elems);
public static T[] MA<T>(params T[] elems) => elems;

public static V GetOrAdd<K,V>(this Dictionary<K,V> dict, K key, V value)
    => dict.TryAdd(key, value) ? value : dict[key];

public static void SetWithExtend<T>(this List<T> list, int index, T value)
{
    int count = list.Count;
    int needed = index + 1;
    for (int i = 0; i < (needed - count); ++i)
    {
        list.Add(default(T));
    }
    list[index] = value;
}

public static IEnumerable<(T, int)> WithIndex<T>(this IEnumerable<T> list) => list.Select((value, index) => (value, index));
public static bool NotNull<T>(T x) => x != null;
