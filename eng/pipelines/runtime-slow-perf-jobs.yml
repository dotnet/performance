parameters:
  runScheduledJobs: false
  runPrivateJobs: false
  runtimeRepoAlias: runtime
  performanceRepoAlias: self
  jobParameters: {}

jobs:
  - ${{ if eq(parameters.runScheduledJobs, true) }}:
    - template: /eng/pipelines/performance/templates/perf-arm64-build-jobs.yml@${{ parameters.runtimeRepoAlias }}
      parameters:
        mono: true

    # run arm64 interpreter jobs for mono
    - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
      parameters:
        jobTemplate: /eng/pipelines/templates/runtime-perf-job.yml@${{ parameters.performanceRepoAlias }}
        buildConfig: release
        runtimeFlavor: mono
        platforms:
        - linux_arm64
        jobParameters:
          liveLibrariesBuildConfig: Release
          runtimeType: mono
          codeGenType: 'Interpreter'
          runKind: micro_mono
          logicalMachine: 'perfampere'
          timeoutInMinutes: 720
          runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
          performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
          ${{ each parameter in parameters.jobParameters }}:
            ${{ parameter.key }}: ${{ parameter.value }}

    # run arm64 jit jobs for mono
    - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
      parameters:
        jobTemplate: /eng/pipelines/templates/runtime-perf-job.yml@${{ parameters.performanceRepoAlias }}
        buildConfig: release
        runtimeFlavor: mono
        platforms:
        - linux_arm64
        jobParameters:
          liveLibrariesBuildConfig: Release
          runtimeType: mono
          runKind: micro_mono
          logicalMachine: 'perfampere'
          timeoutInMinutes: 720
          runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
          performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
          ${{ each parameter in parameters.jobParameters }}:
            ${{ parameter.key }}: ${{ parameter.value }}

  - ${{ if eq(parameters.runPrivateJobs, true) }}:
    - template: /eng/pipelines/performance/templates/perf-arm64-build-jobs.yml@${{ parameters.runtimeRepoAlias }}
      parameters:
        coreclr: true
        monoAot: true

    # run mono aot microbenchmarks perf job
    - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
      parameters:
        jobTemplate: /eng/pipelines/templates/runtime-perf-job.yml@${{ parameters.performanceRepoAlias }}
        buildConfig: release
        runtimeFlavor: aot
        platforms:
        - linux_arm64
        jobParameters:
          liveLibrariesBuildConfig: Release
          runtimeType: mono
          codeGenType: 'AOT'
          runKind: micro_mono
          logicalMachine: 'perfampere'
          timeoutInMinutes: 780
          runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
          performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
          ${{ each parameter in parameters.jobParameters }}:
            ${{ parameter.key }}: ${{ parameter.value }}

    # run coreclr Linux arm64 ampere microbenchmarks perf job
    - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
      parameters:
        jobTemplate: /eng/pipelines/templates/runtime-perf-job.yml@${{ parameters.performanceRepoAlias }}
        buildConfig: release
        runtimeFlavor: coreclr
        platforms:
        - linux_arm64
        jobParameters:
          liveLibrariesBuildConfig: Release
          runKind: micro
          logicalMachine: 'perfampere'
          timeoutInMinutes: 780
          runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
          performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
          ${{ each parameter in parameters.jobParameters }}:
            ${{ parameter.key }}: ${{ parameter.value }}

    # run coreclr Windows arm64 microbenchmarks perf job
    - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
      parameters:
        jobTemplate: /eng/pipelines/templates/runtime-perf-job.yml@${{ parameters.performanceRepoAlias }}
        buildConfig: release
        runtimeFlavor: coreclr
        platforms:
        - windows_arm64
        jobParameters:
          liveLibrariesBuildConfig: Release
          runKind: micro
          logicalMachine: 'perfsurf'
          runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
          performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
          ${{ each parameter in parameters.jobParameters }}:
            ${{ parameter.key }}: ${{ parameter.value }}

    # run coreclr Windows arm64 ampere microbenchmarks perf job
    - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
      parameters:
        jobTemplate: /eng/pipelines/templates/runtime-perf-job.yml@${{ parameters.performanceRepoAlias }}
        buildConfig: release
        runtimeFlavor: coreclr
        platforms:
        - windows_arm64
        jobParameters:
          liveLibrariesBuildConfig: Release
          runKind: micro
          logicalMachine: 'perfampere'
          timeoutInMinutes: 780
          runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
          performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
          ${{ each parameter in parameters.jobParameters }}:
            ${{ parameter.key }}: ${{ parameter.value }}

    # Uncomment once we fix https://github.com/dotnet/performance/issues/1950
    - ${{ if false }}:
      # run coreclr linux crossgen perf job
      - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
        parameters:
          jobTemplate: /eng/pipelines/templates/runtime-perf-job.yml@${{ parameters.performanceRepoAlias }}
          buildConfig: release
          runtimeFlavor: coreclr
          platforms:
          - linux_arm64
          jobParameters:
            liveLibrariesBuildConfig: Release
            projectFile: $(Build.SourcesDirectory)/eng/testing/performance/crossgen_perf.proj
            runKind: crossgen_scenarios
            isScenario: true
            logicalMachine: 'perfa64'
            runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
            performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
            ${{ each parameter in parameters.jobParameters }}:
              ${{ parameter.key }}: ${{ parameter.value }}

      # run coreclr windows crossgen perf job
      - template: /eng/pipelines/common/platform-matrix.yml@${{ parameters.runtimeRepoAlias }}
        parameters:
          jobTemplate: /eng/pipelines/templates/runtime-perf-job.yml@${{ parameters.performanceRepoAlias }}
          buildConfig: release
          runtimeFlavor: coreclr
          platforms:
          - windows_arm64
          jobParameters:
            liveLibrariesBuildConfig: Release
            projectFile: $(Build.SourcesDirectory)/eng/testing/performance/crossgen_perf.proj
            runKind: crossgen_scenarios
            isScenario: true
            logicalMachine: 'perfsurf'
            runtimeRepoAlias: ${{ parameters.runtimeRepoAlias }}
            performanceRepoAlias: ${{ parameters.performanceRepoAlias }}
            ${{ each parameter in parameters.jobParameters }}:
              ${{ parameter.key }}: ${{ parameter.value }}
