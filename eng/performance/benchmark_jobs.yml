parameters:
  osName: ''            # required -- windows | linux | macos
  osVersion: ''         # required -- OS version
  kind: ''              # required -- benchmark kind.
  architecture: ''      # required -- Architecture. Allowed values: x64, x86, arm, arm64
  pool: ''              # required -- name of the Helix pool
  queue: ''             # required -- name of the Helix queue
  container: ''         # optional -- id of the container
  csproj: ''            # required -- relative path to csproj with benchmarks
  channels: []          # required -- list of channels to download .NET from
  runCategories: ''     # required -- string of space separated categories supplied to benchmark dotnet
  machinePool: ''       # required -- Name of perf machine pool (Tiger, Owl, etc)
  affinity: '0'         # optional -- Affinity bitmask to a specific machine in the pool (e.g. 1, 2, etc)
  runEnvVars: []       # optional -- Environment variables to set for the benchmark run in the form of a multi-line object like: "runEnvVars:\n - DOTNET_GCgen0size=1E00000 \n - DOTNET_GCHeapCount=4 \n - DOTNET_GCTotalPhysicalMemory=200000000"

jobs:
- template: ../common/templates/jobs/jobs.yml
  parameters:
    enableTelemetry: false
    enablePublishBuildArtifacts: true
    helixRepo: dotnet/performance
    jobs:
      - job: '${{ parameters.osName }}_${{ parameters.osVersion }}_${{ parameters.architecture }}_${{ parameters.kind }}_${{ parameters.machinePool }}'
        displayName: '${{ parameters.osName }} ${{ parameters.osVersion }} ${{ parameters.architecture }} ${{ parameters.kind }} ${{ parameters.machinePool }}'
        timeoutInMinutes: 320
        variables:
        - name: runEnvVarsParam
          ${{ if ne(length(parameters.runEnvVars), 0)}}:
            value: "--run-env-vars ${{ join(' ', parameters.runEnvVars)}}"
          ${{ if eq(length(parameters.runEnvVars), 0)}}:
            value: ''
        - name: Python
          ${{ if eq(parameters.osName, 'windows') }}:
            value: 'py -3'
          ${{ if ne(parameters.osName, 'windows') }}:
            value: 'python3'
        - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
          - name: internalParam
            value: --internal
          # for private runs, we want to upload perflab data
          - group: DotNet-HelixApi-Access
          # perflab upload tokens still exist in this variable group
          - group: dotnet-benchview
        - ${{ if not(and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest'))) }}:
          - name: internalParam
            value: ''
        workspace:
          clean: all
        pool: ${{ parameters.pool }}
        container: ${{ parameters.container }}
        strategy:
          matrix:
            ${{ each channel in parameters.channels }}:
              ${{ channel }}:
                _Channel: ${{ channel }}
        steps:
        - checkout: self
          clean: true
        - script: $(Python) scripts/run_performance_job.py --performance-repo-ci --queue ${{ parameters.queue }} --channel $(_Channel) --architecture ${{ parameters.architecture }} --run-kind ${{ parameters.kind }} --affinity ${{ parameters.affinity }} $(runEnvVarsParam) --os-group ${{ parameters.osName }} $(internalParam) --target-csproj "${{ parameters.csproj }}" --run-categories "${{ parameters.runCategories }}"
          displayName: Run run_performance_job.py
          env:
            HelixAccessToken: '$(HelixApiAccessToken)'
            PerfCommandUploadToken: '$(PerfCommandUploadToken)'
            PerfCommandUploadTokenLinux: '$(PerfCommandUploadTokenLinux)'
        - template: /eng/performance/send-to-helix.yml