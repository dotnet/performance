resources:
  containers:
    - container: ubuntu_x64_build_container
      image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-20210311173856-047508b

trigger: none
pr: none

jobs:

######################################################
# Public correctness jobs
######################################################

- ${{ if eq(variables['System.TeamProject'], 'public') }}:
  # Windows x64 scenario benchmarks
  - template: /eng/performance/scenarios.yml
    parameters:
      osName: windows
      osVersion: RS5
      architecture: x64
      pool:
        vmImage: windows-2019
      kind: scenarios
      queue: Windows.10.Amd64.ClientRS5.Open
      projectFile: scenarios.proj
      channels: # for public jobs we want to make sure that the PRs don't break any of the supported frameworks
        - release/3.1.4xx

  # Ubuntu 1804 x64 scenario benchmarks
  - template: /eng/performance/scenarios.yml
    parameters:
      osName: ubuntu
      osVersion: 1804
      kind: scenarios
      architecture: x64
      pool: 
        vmImage: ubuntu-latest
      queue: Ubuntu.1804.Amd64.Open
      container: ubuntu_x64_build_container
      projectFile: scenarios.proj
      channels:
        - release/3.1.4xx
  
  ## Windows x64 Blazor scenario benchmarks
  #- template: /eng/performance/scenarios.yml
  #  parameters:
  #    osName: windows
  #    osVersion: RS5
  #    architecture: x64
  #    pool: 
  #      vmImage: windows-2019
  #    kind: blazor_scenarios
  #    queue: Windows.10.Amd64.ClientRS5.Open
  #    projectFile: blazor_scenarios.proj
  #    channels:
  #      - release/3.1.4xx

  # Windows x64 SDK scenario benchmarks
  - template: /eng/performance/scenarios.yml
    parameters:
      osName: windows
      osVersion: RS5
      architecture: x64
      pool: 
        vmImage: windows-2019
      kind: sdk_scenarios
      queue: Windows.10.Amd64.ClientRS5.Open
      projectFile: sdk_scenarios.proj
      channels:
        - release/3.1.4xx
  
  # Ubuntu 1804 x64 SDK scenario benchmarks
  - template: /eng/performance/scenarios.yml
    parameters:
      osName: ubuntu
      osVersion: 1804
      kind: sdk_scenarios
      architecture: x64
      pool: 
        vmImage: ubuntu-latest
      queue: Ubuntu.1804.Amd64.Open
      container: ubuntu_x64_build_container
      projectFile: sdk_scenarios.proj
      channels:
        - release/3.1.4xx

  # Windows x86 SDK scenario benchmarks
  - template: /eng/performance/scenarios.yml
    parameters:
      osName: windows
      osVersion: RS5
      architecture: x86
      pool: 
        vmImage: windows-2019
      kind: sdk_scenarios
      queue: Windows.10.Amd64.ClientRS5.Open
      projectFile: sdk_scenarios.proj
      channels:
        - release/3.1.4xx
  
  # Windows x64 micro benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: RS5
      kind: micro
      architecture: x64
      pool: 
        vmImage: windows-2019
      queue: Windows.10.Amd64.ClientRS5.Open
      csproj: src\benchmarks\micro\MicroBenchmarks.csproj
      runCategories: 'runtime libraries' 
      channels:
        - release/3.1.4xx

  # Windows x86 micro benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: RS5
      kind: micro
      architecture: x86
      pool: 
        vmImage: windows-2019
      queue: Windows.10.Amd64.ClientRS5.Open
      csproj: src\benchmarks\micro\MicroBenchmarks.csproj
      runCategories: 'runtime libraries'
      channels: # for public jobs we want to make sure that the PRs don't break x86
        - release/3.1.4xx

  # Windows x64 ML.NET benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: RS5
      kind: mlnet
      architecture: x64
      pool: 
        vmImage: windows-2019
      queue: Windows.10.Amd64.ClientRS5.Open
      csproj: src\benchmarks\real-world\Microsoft.ML.Benchmarks\Microsoft.ML.Benchmarks.csproj
      runCategories: 'mldotnet'
      channels: # for ML.NET jobs we want to check .NET Core 3.1 and 5.0 only
        - release/3.1.4xx

  # Windows x64 Roslyn benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: RS5
      kind: roslyn
      architecture: x64
      pool: 
        vmImage: windows-2019
      queue: Windows.10.Amd64.ClientRS5.Open
      csproj: src\benchmarks\real-world\Roslyn\CompilerBenchmarks.csproj
      runCategories: 'roslyn'
      channels: # for Roslyn jobs we want to check .NET Core 3.1 and 5.0 only
        - release/3.1.4xx
        
  # Ubuntu 1804 x64 micro benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: ubuntu
      osVersion: 1804
      kind: micro
      architecture: x64
      pool: 
        vmImage: ubuntu-latest
      queue: Ubuntu.1804.Amd64.Open
      container: ubuntu_x64_build_container
      csproj: src/benchmarks/micro/MicroBenchmarks.csproj
      runCategories: 'runtime libraries'
      channels: # for public jobs we want to make sure that the PRs don't break any of the supported frameworks
        - release/3.1.4xx

  # Ubuntu 1804 x64 ML.NET benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: ubuntu
      osVersion: 1804
      kind: mlnet
      architecture: x64
      pool: 
        vmImage: ubuntu-latest
      queue: Ubuntu.1804.Amd64.Open
      container: ubuntu_x64_build_container
      runCategories: 'mldotnet'
      csproj: src/benchmarks/real-world/Microsoft.ML.Benchmarks/Microsoft.ML.Benchmarks.csproj
      channels: # for ML.NET jobs we want to check .NET Core 3.1 and 5.0 only
        - release/3.1.4xx

  # Ubuntu 1804 x64 Roslyn benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: ubuntu
      osVersion: 1804
      kind: roslyn
      architecture: x64
      pool: 
        vmImage: ubuntu-latest
      queue: Ubuntu.1804.Amd64.Open
      container: ubuntu_x64_build_container
      runCategories: 'roslyn'
      csproj: src/benchmarks/real-world/Roslyn/CompilerBenchmarks.csproj
      channels: # for Roslyn jobs we want to check .NET Core 3.1 and 5.0 only
        - release/3.1.4xx

###########################################
# Private Jobs
###########################################

- ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:

  # Windows x64 scenario benchmarks
  - template: /eng/performance/scenarios.yml
    parameters:
      osName: windows
      osVersion: 19H1
      architecture: x64
      pool: 
        vmImage: windows-2019
      kind: scenarios
      queue: Windows.10.Amd64.19H1.Tiger.Perf
      projectFile: scenarios.proj
      channels: # for public jobs we want to make sure that the PRs don't break any of the supported channels
        - release/3.1.4xx

  # Ubuntu 1804 x64 micro benchmarks
  - template: /eng/performance/scenarios.yml
    parameters:
      osName: ubuntu
      osVersion: 1804
      kind: scenarios
      architecture: x64
      pool: 
        vmImage: ubuntu-latest
      queue: Ubuntu.1804.Amd64.Tiger.Perf # using a dedicated private Helix queue (perftigers)
      container: ubuntu_x64_build_container
      projectFile: scenarios.proj
      channels:
        - release/3.1.4xx

  # Windows x64 micro benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: 19H1
      kind: micro
      architecture: x64
      pool: 
        vmImage: windows-2019
      queue: Windows.10.Amd64.19H1.Tiger.Perf # using a dedicated private Helix queue (perftigers)
      csproj: src\benchmarks\micro\MicroBenchmarks.csproj
      runCategories: 'runtime libraries'
      channels: # for private jobs we want to benchmark .NET Core 3.1 and 5.0 only
        - release/3.1.4xx
      
  # Windows x86 micro benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: 19H1
      kind: micro
      architecture: x86
      pool: 
        vmImage: windows-2019
      queue: Windows.10.Amd64.19H1.Tiger.Perf # using a dedicated private Helix queue (perftigers)
      csproj: src\benchmarks\micro\MicroBenchmarks.csproj
      runCategories: 'runtime libraries'
      channels: # for private jobs we want to benchmark .NET Core 3.1 and 5.0 only
        - release/3.1.4xx

  # Windows x64 ML.NET benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: 19H1
      kind: mlnet
      architecture: x64
      pool: 
        vmImage: windows-2019
      queue: Windows.10.Amd64.19H1.Tiger.Perf # using a dedicated private Helix queue (perftigers)
      csproj: src\benchmarks\real-world\Microsoft.ML.Benchmarks\Microsoft.ML.Benchmarks.csproj
      runCategories: 'mldotnet'
      channels: # for private jobs we want to benchmark .NET Core 3.1 and 5.0 only
        - release/3.1.4xx

  # Windows x64 Roslyn benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: 19H1
      kind: roslyn
      architecture: x64
      pool: 
        vmImage: windows-2019
      queue: Windows.10.Amd64.19H1.Tiger.Perf # using a dedicated private Helix queue (perfsnakes)
      csproj: src\benchmarks\real-world\Roslyn\CompilerBenchmarks.csproj
      runCategories: 'roslyn'
      channels: # for private jobs we want to benchmark .NET Core 3.1 and 5.0 only
        - release/3.1.4xx

  # Ubuntu 1804 x64 micro benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: ubuntu
      osVersion: 1804
      kind: micro
      architecture: x64
      pool: 
        vmImage: ubuntu-latest
      queue: Ubuntu.1804.Amd64.Tiger.Perf # using a dedicated private Helix queue (perftigers)
      container: ubuntu_x64_build_container
      csproj: src/benchmarks/micro/MicroBenchmarks.csproj
      runCategories: 'runtime libraries'
      channels: # for private jobs we want to benchmark .NET Core 3.1 and 5.0 only
        - release/3.1.4xx

  # Ubuntu 1804 x64 ML.NET benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: ubuntu
      osVersion: 1804
      kind: mlnet
      architecture: x64
      pool: 
        vmImage: ubuntu-latest
      queue: Ubuntu.1804.Amd64.Tiger.Perf # using a dedicated private Helix queue (perftigers)
      container: ubuntu_x64_build_container
      csproj: src/benchmarks/real-world/Microsoft.ML.Benchmarks/Microsoft.ML.Benchmarks.csproj
      runCategories: 'mldotnet'
      channels: # for private jobs we want to benchmark .NET Core 3.1 and 5.0 only
        - release/3.1.4xx
  
  # Ubuntu 1804 x64 Roslyn benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: ubuntu
      osVersion: 1804
      kind: roslyn
      architecture: x64
      pool: 
        vmImage: ubuntu-latest
      queue: Ubuntu.1804.Amd64.Tiger.Perf # using a dedicated private Helix queue (perftigers)
      container: ubuntu_x64_build_container
      csproj: src/benchmarks/real-world/Roslyn/CompilerBenchmarks.csproj
      runCategories: 'roslyn'
      channels: # for private jobs we want to benchmark .NET Core 3.1 and 5.0 only
        - release/3.1.4xx

################################################
# Scheduled Private jobs
################################################

# Scheduled runs will run all of the jobs on the PerfTigers, as well as the Arm64 job
- ${{ if and(ne(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'Schedule')) }}:

  # Windows x64 SDK scenario benchmarks
  - template: /eng/performance/scenarios.yml
    parameters:
      osName: windows
      osVersion: RS5
      architecture: x64
      pool: 
        vmImage: windows-2019
      kind: sdk_scenarios
      queue: Windows.10.Amd64.19H1.Tiger.Perf
      projectFile: sdk_scenarios.proj
      channels:
        - release/3.1.4xx
  
  # Windows x86 SDK scenario benchmarks
  - template: /eng/performance/scenarios.yml
    parameters:
      osName: windows
      osVersion: RS5
      architecture: x86
      pool: 
        vmImage: windows-2019
      kind: sdk_scenarios
      queue: Windows.10.Amd64.19H1.Tiger.Perf
      projectFile: sdk_scenarios.proj
      channels:
        - release/3.1.4xx

  # Ubuntu 1804 x64 SDK scenario benchmarks
  - template: /eng/performance/scenarios.yml
    parameters:
      osName: ubuntu
      osVersion: 1804
      architecture: x64
      pool: 
        vmImage: ubuntu-latest
      kind: sdk_scenarios
      queue: Ubuntu.1804.Amd64.Tiger.Perf
      container: ubuntu_x64_build_container
      projectFile: sdk_scenarios.proj
      channels:
        - release/3.1.4xx

  ## Windows x64 Blazor 3.2 scenario benchmarks
  #- template: /eng/performance/scenarios.yml
  #  parameters:
  #    osName: windows
  #    osVersion: RS5
  #    architecture: x64
  #    pool: 
  #      vmImage: windows-2019
  #    kind: blazor_scenarios
  #    queue: Windows.10.Amd64.19H1.Tiger.Perf
  #    projectFile: blazor_scenarios.proj
  #    channels:
  #      - release/3.1.4xx