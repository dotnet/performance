resources:
  containers:
    - container: ubuntu_x64_build_container
      image: microsoft/dotnet-buildtools-prereqs:ubuntu-16.04-c103199-20180628134544

# CI Trigger on master branch
trigger:
  branches:
    include:
    - master
  paths:
    exclude: # don't trigger the CI if only a doc file was changed
    - docs/*
    - eng/common/README.md
    - src/benchmarks/micro/Serializers/README.md
    - src/benchmarks/micro/README.md
    - src/benchmarks/real-world/JitBench/README.md
    - src/benchmarks/real-world/Microsoft.ML.Benchmarks/Input/README.md
    - src/tools/ResultsComparer/README.md
    - README.md

# Trigger builds for PR's targeting master
pr:
  branches:
    include:
    - master
  paths:
    exclude: # don't trigger the CI if only a doc file was changed
    - docs/*
    - eng/common/README.md
    - src/benchmarks/micro/Serializers/README.md
    - src/benchmarks/micro/README.md
    - src/benchmarks/real-world/JitBench/README.md
    - src/benchmarks/real-world/Microsoft.ML.Benchmarks/Input/README.md
    - src/tools/ResultsComparer/README.md
    - README.md

schedules:
- cron: "0 */4 * * *"
  displayName: Every 4 hour build
  branches:
    include:
    - master
  always: true

jobs:

######################################################
# Public correctness jobs
######################################################

- ${{ if eq(variables['System.TeamProject'], 'public') }}:
  # Windows x64 scenario benchmarks
  - template: /eng/performance/scenarios.yml
    parameters:
      osName: windows
      osVersion: RS5
      architecture: x64
      pool: Hosted VS2017
      kind: scenarios
      queue: Windows.10.Amd64.ClientRS5.Open
      frameworks: # for public jobs we want to make sure that the PRs don't break any of the supported frameworks
        - netcoreapp5.0
        
  # Windows x64 micro benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: RS5
      kind: micro
      architecture: x64
      pool: Hosted VS2017
      queue: Windows.10.Amd64.ClientRS5.Open
      csproj: src\benchmarks\micro\MicroBenchmarks.csproj
      runCategories: 'coreclr corefx' 
      frameworks: # for public jobs we want to make sure that the PRs don't break any of the supported frameworks
        - netcoreapp5.0
        - netcoreapp3.0
        - netcoreapp2.2
        - netcoreapp2.1

  # Windows x64 net461 micro benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: RS4
      kind: micro_net461
      architecture: x64
      pool: Hosted VS2017
      queue: Windows.10.Amd64.ClientRS4.DevEx.15.8.Open
      csproj: src\benchmarks\micro\MicroBenchmarks.csproj
      runCategories: 'coreclr corefx'
      frameworks: # for public jobs we want to make sure that the PRs don't break any of the supported frameworks
        - net461

  # Windows x86 micro benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: RS5
      kind: micro
      architecture: x86
      pool: Hosted VS2017
      queue: Windows.10.Amd64.ClientRS5.Open
      csproj: src\benchmarks\micro\MicroBenchmarks.csproj
      runCategories: 'coreclr corefx'
      frameworks: # for public jobs we want to make sure that the PRs don't break x86
        - netcoreapp5.0

  # Windows x64 ML.NET benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: RS5
      kind: mlnet
      architecture: x64
      pool: Hosted VS2017
      queue: Windows.10.Amd64.ClientRS5.Open
      csproj: src\benchmarks\real-world\Microsoft.ML.Benchmarks\Microsoft.ML.Benchmarks.csproj
      runCategories: 'mldotnet'
      frameworks: # for ML.NET jobs we want to check .NET Core 3.0 and 5.0 only
        - netcoreapp5.0
        - netcoreapp3.0

  # Windows x64 Roslyn benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: RS5
      kind: roslyn
      architecture: x64
      pool: Hosted VS2017
      queue: Windows.10.Amd64.ClientRS5.Open
      csproj: src\benchmarks\real-world\Roslyn\CompilerBenchmarks.csproj
      runCategories: 'roslyn'
      frameworks: # for Roslyn jobs we want to check .NET Core 3.0 and 5.0 only
        - netcoreapp5.0
        - netcoreapp3.0
        
  # Ubuntu 1804 x64 micro benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: ubuntu
      osVersion: 1804
      kind: micro
      architecture: x64
      pool: Hosted Ubuntu 1604
      queue: Ubuntu.1804.Amd64.Open
      container: ubuntu_x64_build_container
      csproj: src/benchmarks/micro/MicroBenchmarks.csproj
      runCategories: 'coreclr corefx'
      frameworks: # for public jobs we want to make sure that the PRs don't break any of the supported frameworks
        - netcoreapp5.0
        - netcoreapp3.0
        - netcoreapp2.2
        - netcoreapp2.1

  # Ubuntu 1804 x64 ML.NET benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: ubuntu
      osVersion: 1804
      kind: mlnet
      architecture: x64
      pool: Hosted Ubuntu 1604
      queue: Ubuntu.1804.Amd64.Open
      container: ubuntu_x64_build_container
      runCategories: 'mldotnet'
      csproj: src/benchmarks/real-world/Microsoft.ML.Benchmarks/Microsoft.ML.Benchmarks.csproj
      frameworks: # for ML.NET jobs we want to check .NET Core 3.0 and 5.0 only
        - netcoreapp5.0
        - netcoreapp3.0

  # Ubuntu 1804 x64 Roslyn benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: ubuntu
      osVersion: 1804
      kind: roslyn
      architecture: x64
      pool: Hosted Ubuntu 1604
      queue: Ubuntu.1804.Amd64.Open
      container: ubuntu_x64_build_container
      runCategories: 'roslyn'
      csproj: src/benchmarks/real-world/Roslyn/CompilerBenchmarks.csproj
      frameworks: # for Roslyn jobs we want to check .NET Core 3.0 and 5.0 only
        - netcoreapp5.0
        - netcoreapp3.0

###########################################
# Private Jobs
###########################################

- ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:

  # Windows x64 scenario benchmarks
  - template: /eng/performance/scenarios.yml
    parameters:
      osName: windows
      osVersion: 19H1
      architecture: x64
      pool: Hosted VS2017
      kind: scenarios
      queue: Windows.10.Amd64.19H1.Tiger.Perf
      frameworks: # for public jobs we want to make sure that the PRs don't break any of the supported frameworks
        - netcoreapp5.0

  # Windows x64 micro benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: 19H1
      kind: micro
      architecture: x64
      pool: Hosted VS2017
      queue: Windows.10.Amd64.19H1.Tiger.Perf # using a dedicated private Helix queue (perftigers)
      csproj: src\benchmarks\micro\MicroBenchmarks.csproj
      runCategories: 'coreclr corefx'
      frameworks: # for private jobs we want to benchmark .NET Core 3.0 and 5.0 only
        - netcoreapp5.0
        - netcoreapp3.0
      
  # Windows x86 micro benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: 19H1
      kind: micro
      architecture: x86
      pool: Hosted VS2017
      queue: Windows.10.Amd64.19H1.Tiger.Perf # using a dedicated private Helix queue (perftigers)
      csproj: src\benchmarks\micro\MicroBenchmarks.csproj
      runCategories: 'coreclr corefx'
      frameworks: # for private jobs we want to benchmark .NET Core 3.0 and 5.0 only
        - netcoreapp5.0
        - netcoreapp3.0

  # Windows x64 ML.NET benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: 19H1
      kind: mlnet
      architecture: x64
      pool: Hosted VS2017
      queue: Windows.10.Amd64.19H1.Tiger.Perf # using a dedicated private Helix queue (perftigers)
      csproj: src\benchmarks\real-world\Microsoft.ML.Benchmarks\Microsoft.ML.Benchmarks.csproj
      runCategories: 'mldotnet'
      frameworks: # for private jobs we want to benchmark .NET Core 3.0 and 5.0 only
        - netcoreapp5.0
        - netcoreapp3.0

  # Windows x64 Roslyn benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: 19H1
      kind: roslyn
      architecture: x64
      pool: Hosted VS2017
      queue: Windows.10.Amd64.19H1.Tiger.Perf # using a dedicated private Helix queue (perfsnakes)
      csproj: src\benchmarks\real-world\Roslyn\CompilerBenchmarks.csproj
      runCategories: 'roslyn'
      frameworks: # for private jobs we want to benchmark .NET Core 3.0 and 5.0 only
        - netcoreapp5.0
        - netcoreapp3.0

  # Ubuntu 1804 x64 micro benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: ubuntu
      osVersion: 1804
      kind: micro
      architecture: x64
      pool: Hosted Ubuntu 1604
      queue: Ubuntu.1804.Amd64.Tiger.Perf # using a dedicated private Helix queue (perftigers)
      container: ubuntu_x64_build_container
      csproj: src/benchmarks/micro/MicroBenchmarks.csproj
      runCategories: 'coreclr corefx'
      frameworks: # for private jobs we want to benchmark .NET Core 3.0 and 5.0 only
        - netcoreapp5.0
        - netcoreapp3.0

  # Ubuntu 1804 x64 ML.NET benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: ubuntu
      osVersion: 1804
      kind: mlnet
      architecture: x64
      pool: Hosted Ubuntu 1604
      queue: Ubuntu.1804.Amd64.Tiger.Perf # using a dedicated private Helix queue (perftigers)
      container: ubuntu_x64_build_container
      csproj: src/benchmarks/real-world/Microsoft.ML.Benchmarks/Microsoft.ML.Benchmarks.csproj
      runCategories: 'mldotnet'
      frameworks: # for private jobs we want to benchmark .NET Core 3.0 and 5.0 only
        - netcoreapp5.0
        - netcoreapp3.0
  
  # Ubuntu 1804 x64 Roslyn benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: ubuntu
      osVersion: 1804
      kind: roslyn
      architecture: x64
      pool: Hosted Ubuntu 1604
      queue: Ubuntu.1804.Amd64.Tiger.Perf # using a dedicated private Helix queue (perftigers)
      container: ubuntu_x64_build_container
      csproj: src/benchmarks/real-world/Roslyn/CompilerBenchmarks.csproj
      runCategories: 'roslyn'
      frameworks: # for private jobs we want to benchmark .NET Core 3.0 and 5.0 only
        - netcoreapp5.0
        - netcoreapp3.0

################################################
# Scheduled Private jobs
################################################

# Scheduled runs will run all of the jobs on the PerfTigers, as well as jobs on the PerfSnakes and the Arm64 job
- ${{ if and(ne(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'Schedule')) }}:
  # Windows x64 micro benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: RS1
      kind: micro
      architecture: x64
      pool: Hosted VS2017
      queue: Windows.10.Amd64.ClientRS1.Perf # using a dedicated private Helix queue (perfsnakes)
      csproj: src\benchmarks\micro\MicroBenchmarks.csproj
      runCategories: 'coreclr corefx'
      frameworks: # for private jobs we want to benchmark .NET Core 3.0 only
        - netcoreapp3.0
      
  # Windows x86 micro benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: RS1
      kind: micro
      architecture: x86
      pool: Hosted VS2017
      queue: Windows.10.Amd64.ClientRS1.Perf # using a dedicated private Helix queue (perfsnakes)
      csproj: src\benchmarks\micro\MicroBenchmarks.csproj
      runCategories: 'coreclr corefx'
      frameworks: # for private jobs we want to benchmark .NET Core 3.0 only
        - netcoreapp3.0

  # Windows x64 ML.NET benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: RS1
      kind: mlnet
      architecture: x64
      pool: Hosted VS2017
      queue: Windows.10.Amd64.ClientRS1.Perf # using a dedicated private Helix queue (perfsnakes)
      csproj: src\benchmarks\real-world\Microsoft.ML.Benchmarks\Microsoft.ML.Benchmarks.csproj
      runCategories: 'mldotnet'
      frameworks: # for private jobs we want to benchmark .NET Core 3.0 only
        - netcoreapp3.0

  # Windows x64 Roslyn benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: windows
      osVersion: RS1
      kind: roslyn
      architecture: x64
      pool: Hosted VS2017
      queue: Windows.10.Amd64.ClientRS1.Perf # using a dedicated private Helix queue (perfsnakes)
      csproj: src\benchmarks\real-world\Roslyn\CompilerBenchmarks.csproj
      runCategories: 'roslyn'
      frameworks: # for private jobs we want to benchmark .NET Core 3.0 only
        - netcoreapp3.0

  # Ubuntu 1604 x64 micro benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: ubuntu
      osVersion: 1604
      kind: micro
      architecture: x64
      pool: Hosted Ubuntu 1604
      queue: Ubuntu.1604.Amd64.Perf # using a dedicated private Helix queue (perfsnakes)
      container: ubuntu_x64_build_container
      csproj: src/benchmarks/micro/MicroBenchmarks.csproj
      runCategories: 'coreclr corefx'
      frameworks: # for private jobs we want to benchmark .NET Core 3.0 only
        - netcoreapp3.0

  # Ubuntu 1604 x64 ML.NET benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: ubuntu
      osVersion: 1604
      kind: mlnet
      architecture: x64
      pool: Hosted Ubuntu 1604
      queue: Ubuntu.1604.Amd64.Perf # using a dedicated private Helix queue (perfsnakes)
      container: ubuntu_x64_build_container
      csproj: src/benchmarks/real-world/Microsoft.ML.Benchmarks/Microsoft.ML.Benchmarks.csproj
      runCategories: 'mldotnet'
      frameworks: # for private jobs we want to benchmark .NET Core 3.0 only
        - netcoreapp3.0
  
  # Ubuntu 1604 x64 Roslyn benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: ubuntu
      osVersion: 1604
      kind: roslyn
      architecture: x64
      pool: Hosted Ubuntu 1604
      queue: Ubuntu.1604.Amd64.Perf # using a dedicated private Helix queue (perfsnakes)
      container: ubuntu_x64_build_container
      csproj: src/benchmarks/real-world/Roslyn/CompilerBenchmarks.csproj
      runCategories: 'roslyn'
      frameworks: # for private jobs we want to benchmark .NET Core 3.0 only
        - netcoreapp3.0

  # Ubuntu 1804 ARM64 micro benchmarks
  - template: /eng/performance/benchmark_jobs.yml
    parameters:
      osName: ubuntu
      osVersion: 1804
      kind: micro
      architecture: arm64
      pool: Hosted Ubuntu 1604
      queue: Ubuntu.1804.Arm64.Perf
      container: ubuntu_x64_build_container
      csproj: src/benchmarks/micro/MicroBenchmarks.csproj
      runCategories: 'coreclr corefx'
      frameworks: # currently ARM64 is supported only by .NET Core 3.0 https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0-supported-os.md
        - netcoreapp3.0