parameters:
- name: runPublicJobs
  type: boolean
  default: false
- name: runPrivateJobs
  type: boolean
  default: false
- name: runScheduledPrivateJobs
  type: boolean
  default: false

resources:
  containers:
    - container: ubuntu_x64_build_container
      image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04
    - container: centos_x64_build_container
      image: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7

# CI Trigger on release/7.0 branch
trigger:
  branches:
    include:
    - release/7.0
  paths:
    include:
    - eng/Version.Details.xml

# Trigger builds for PR's targeting release/7.0
pr:
  branches:
    include:
    - release/7.0
  paths:
    exclude: # don't trigger the CI if only a doc file was changed
    - docs/
    - '**/*.md'
    - scripts/benchmarks_monthly.py

schedules:
  - cron: "0 */12 * * *"
    displayName: Every 12 hours build
    branches:
      include:
      - release/7.0
    always: true

jobs:

######################################################
# Public correctness jobs
######################################################

- ${{ if or(eq(variables['System.TeamProject'], 'public'), parameters.runPublicJobs) }}:

  # Scenario benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/scenarios.yml
      buildMachines:
        - win-x64
        - ubuntu-x64
      isPublic: true
      jobParameters:
        kind: scenarios
        projectFile: scenarios.proj
        channels: # for public jobs we want to make sure that the PRs don't break any of the supported frameworks
          - release/7.0

  # MAUI scenario benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/scenarios.yml
      buildMachines:
        - win-x64
        #- ubuntu-x64
      isPublic: true
      jobParameters:
        kind: maui_scenarios
        projectFile: maui_scenarios.proj
        channels: # for public jobs we want to make sure that the PRs don't break any of the supported frameworks
          - release/7.0

  # Blazor scenario benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/scenarios.yml
      buildMachines:
        - win-x64
      isPublic: true
      jobParameters:
        kind: blazor_scenarios
        projectFile: blazor_scenarios.proj
        channels: # for public jobs we want to make sure that the PRs don't break any of the supported frameworks
          - release/7.0

  # SDK scenario benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/scenarios.yml
      buildMachines:
        - win-x64
        - win-x86
        - ubuntu-x64
      isPublic: true
      jobParameters:
        kind: sdk_scenarios
        projectFile: sdk_scenarios.proj
        channels: # for public jobs we want to make sure that the PRs don't break any of the supported frameworks
          - release/7.0
  
  # micro benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/benchmark_jobs.yml
      buildMachines:
        - win-x64
        - win-x86
        - ubuntu-x64
      isPublic: true
      jobParameters:
        kind: micro
        csproj: src\benchmarks\micro\MicroBenchmarks.csproj
        runCategories: 'runtime libraries' 
        channels:
          - release/7.0

  ## net461 micro benchmarks
  #- template: /eng/performance/build_machine_matrix.yml
  #  parameters:
  #    jobTemplate: /eng/performance/benchmark_jobs.yml
  #    buildMachines:
  #      - win-rs5-x64
  #    isPublic: true
  #    jobParameters:
  #      kind: micro_net461
  #      csproj: src\benchmarks\micro\MicroBenchmarks.csproj
  #      runCategories: 'runtime libraries'
  #      channels:
  #        - LTS

  # NativeAOT micro benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/benchmark_jobs.yml
      buildMachines:
        - centos-x64
      isPublic: true
      jobParameters:
        kind: micro
        csproj: src\benchmarks\micro\MicroBenchmarks.csproj
        runCategories: 'runtime libraries' 
        channels:
          - nativeaot7.0

  # ML.NET benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/benchmark_jobs.yml
      buildMachines:
        - win-x64
        - ubuntu-x64
      isPublic: true
      jobParameters:
        kind: mlnet
        csproj: src\benchmarks\real-world\Microsoft.ML.Benchmarks\Microsoft.ML.Benchmarks.csproj
        runCategories: 'mldotnet' 
        channels:
          - release/7.0

  # F# benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/benchmark_jobs.yml
      buildMachines:
        - win-x64
        - ubuntu-x64
      isPublic: true
      jobParameters:
        kind: fsharp
        csproj: src\benchmarks\real-world\FSharp\FSharp.fsproj
        runCategories: 'fsharp'
        channels:
          - release/7.0

  # Roslyn benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/benchmark_jobs.yml
      buildMachines:
        - win-x64
        - ubuntu-x64
      isPublic: true
      jobParameters:
        kind: roslyn
        csproj: src\benchmarks\real-world\Roslyn\CompilerBenchmarks.csproj
        runCategories: 'roslyn'
        channels: # for Roslyn jobs we want to check .NET Core 3.1 and 5.0 only
          - release/7.0

  # ILLink benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/benchmark_jobs.yml
      buildMachines:
        - win-x64
        - ubuntu-x64
      isPublic: true
      jobParameters:
        kind: illink
        csproj: src\benchmarks\real-world\ILLink\ILLinkBenchmarks.csproj
        runCategories: 'illink'
        channels: # for Roslyn jobs we want to check .NET Core 3.1 and 5.0 only
          - release/7.0

###########################################
# Private Jobs
###########################################

- ${{ if or(and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest', 'Manual')), parameters.runPrivateJobs) }}:

  # Scenario benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/scenarios.yml
      buildMachines:
        - win-x64
        - ubuntu-x64
        - win-arm64
      isPublic: false
      jobParameters:
        kind: scenarios
        projectFile: scenarios.proj
        channels:
          - release/7.0

  # Maui scenario benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/scenarios.yml
      buildMachines:
        - win-x64
        #- ubuntu-x64
        #- win-arm64
      isPublic: false
      jobParameters:
        kind: maui_scenarios
        projectFile: maui_scenarios.proj
        channels:
          - release/7.0
    
  # Maui Android scenario benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/scenarios.yml
      buildMachines:
        - win-x64-android-arm64
      isPublic: false
      jobParameters:
        kind: maui_scenarios_android
        projectFile: maui_scenarios_android.proj
        channels:
          - release/7.0
  
  # Maui iOS scenario benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/scenarios.yml
      buildMachines:
        - osx-x64-ios-arm64
      isPublic: false
      jobParameters:
        kind: maui_scenarios_ios
        projectFile: maui_scenarios_ios.proj
        channels:
          - release/7.0

################################################
# Scheduled Private jobs
################################################

# Scheduled runs will run all of the jobs on the PerfTigers, as well as the Arm64 job
- ${{ if or(and(and(ne(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'Schedule')), not(contains(variables['Build.QueuedBy'], 'Weekly'))), parameters.runScheduledPrivateJobs) }}:

  # SDK scenario benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/scenarios.yml
      buildMachines:
        - win-x64
        - win-x86
        - ubuntu-x64
      isPublic: false
      jobParameters:
        kind: sdk_scenarios
        projectFile: sdk_scenarios.proj
        channels:
          - release/7.0

  # Blazor 3.2 scenario benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/scenarios.yml
      buildMachines:
        - win-x64
      isPublic: false
      jobParameters:
        kind: blazor_scenarios
        projectFile: blazor_scenarios.proj
        channels:
          - release/7.0
  
  # ML.NET benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/benchmark_jobs.yml
      buildMachines:
        - win-x64
        - ubuntu-x64
      isPublic: false
      jobParameters:
        kind: mlnet
        csproj: src\benchmarks\real-world\Microsoft.ML.Benchmarks\Microsoft.ML.Benchmarks.csproj
        runCategories: 'mldotnet'
        channels: # for ML.NET jobs we want to check .NET Core 3.1 and 5.0 only
          - release/7.0

  # F# benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/benchmark_jobs.yml
      buildMachines:
        - win-x64
        - ubuntu-x64
      isPublic: false
      jobParameters:
        kind: fsharp
        csproj: src\benchmarks\real-world\FSharp\FSharp.fsproj
        runCategories: 'fsharp'
        channels:
          - release/7.0

  # Roslyn benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/benchmark_jobs.yml
      buildMachines:
        - win-x64
        - ubuntu-x64
      isPublic: false
      jobParameters:
        kind: roslyn
        csproj: src\benchmarks\real-world\Roslyn\CompilerBenchmarks.csproj
        runCategories: 'roslyn'
        channels: # for Roslyn jobs we want to check .NET Core 3.1 and 5.0 only
          - release/7.0

  # ILLink benchmarks
  - template: /eng/performance/build_machine_matrix.yml
    parameters:
      jobTemplate: /eng/performance/benchmark_jobs.yml
      buildMachines:
        - win-x64
        - ubuntu-x64
      isPublic: false
      jobParameters:
        kind: illink
        csproj: src\benchmarks\real-world\ILLink\ILLinkBenchmarks.csproj
        runCategories: 'illink'
        channels: # for Roslyn jobs we want to check .NET Core 3.1 and 5.0 only
          - release/7.0

  # Secret Sync
  - job: Synchronize
    pool:
      name: NetCore1ESPool-Internal-NoMSI
      demands: ImageOverride -equals 1es-windows-2019
    steps:
    - task: UseDotNet@2
      displayName: Install .NET 6.0 runtime
      inputs:
        version: 6.x

    - script: dotnet tool restore

    - task: AzureCLI@2
      inputs:
        azureSubscription: .NET Performance (790c4451-dad9-4fda-af8b-10bd9ca328fa)
        scriptType: ps
        scriptLocation: inlineScript
        inlineScript: |
          Get-ChildItem .vault-config/*.yaml |% { dotnet secret-manager synchronize $_}

################################################
# Manually Triggered Job
################################################


- ${{ if and(ne(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'Manual'), not(parameters.runPublicJobs), not(parameters.runScheduledPrivateJobs), not(parameters.runPrivateJobs)) }}:
  - job: Synchronize
    pool:
      name: NetCore1ESPool-Internal-NoMSI
      demands: ImageOverride -equals 1es-windows-2019
    steps:
    - task: UseDotNet@2
      displayName: Install .NET 6.0 runtime
      inputs:
        version: 6.x

    - script: dotnet tool restore

    - task: AzureCLI@2
      inputs:
        azureSubscription: .NET Performance (790c4451-dad9-4fda-af8b-10bd9ca328fa)
        scriptType: ps
        scriptLocation: inlineScript
        inlineScript: |
          Get-ChildItem .vault-config/*.yaml |% { dotnet secret-manager synchronize $_}

################################################
# Scheduled Private jobs (Weekly)
################################################

# Scheduled runs will run all of the jobs on the PerfTigers, as well as the Arm64 job
- ${{ if and(and(ne(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'Schedule')), contains(variables['Build.QueuedBy'], 'Weekly')) }}:
  - job: Synchronize
    pool:
      name: NetCore1ESPool-Internal-NoMSI
      demands: ImageOverride -equals 1es-windows-2019
    steps:
    - task: UseDotNet@2
      displayName: Install .NET 6.0 runtime
      inputs:
        version: 6.x

    - script: dotnet tool restore

    - task: AzureCLI@2
      inputs:
        azureSubscription: .NET Performance (790c4451-dad9-4fda-af8b-10bd9ca328fa)
        scriptType: ps
        scriptLocation: inlineScript
        inlineScript: |
          Get-ChildItem .vault-config/*.yaml |% { dotnet secret-manager synchronize $_}
